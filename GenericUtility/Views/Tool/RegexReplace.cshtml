@model GenericUtility.Models.RegexReplaceViewModel

<div class="container">
    <h2>Regex Replace</h2>

    <form method="post">
        <div class="form-group">
            <label for="InputText">Enter Text:</label>
            <textarea class="form-control" id="InputText" name="InputText" rows="5">@Model.InputText</textarea>
        </div>
        <div class="form-group">
            <label for="Pattern">Enter Regex Pattern:</label>
            <input type="text" class="form-control" id="Pattern" name="Pattern" value="@Model.Pattern" />
        </div>
        <div class="form-group">
            <label for="Replacement">Enter Replacement Text:</label>
            <input type="text" class="form-control" id="Replacement" name="Replacement" value="@Model.Replacement" />
        </div>
        <button type="submit" class="btn btn-primary">Replace</button>
    </form>

    @if (Model != null)
    {
        <h4>Result:</h4>
        @if (Model.ErrorMessage != null)
        {
            <div class="alert alert-danger">@Model.ErrorMessage</div>
        }
        else if (Model.ResultText != null)
        {
            <pre>@Model.ResultText</pre>
        }
    }

    @if (ViewData.ModelState?.Count > 0)
    {
        <div class="alert alert-danger">
            <ul>
                @foreach (var error in ViewData.ModelState.Values.SelectMany(x => x.Errors))
                {
                    <li>@error.ErrorMessage</li>
                }
            </ul>
        </div>
    }
</div>
