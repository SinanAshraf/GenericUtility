@using GenericUtility.Services
@using GenericUtility.Models
@model PaginatedList<TutorialsVM>

@{
    ViewData["Title"] = "Tutorials Page";
    string tutorialName = ViewData["TutorialName"] as string;
}

<div class="row">
    <div class="col-md-3">
        <h2 class="mt-4">Tutorials List</h2>
        <ul class="list-group">
            @foreach (var tutorial in Model.Items)
            {
                <li class="list-group-item">
                    <a href="@Url.Action("Details", new { name = tutorialName, page = Model.PageIndex })">@tutorial.Name</a>
                </li>
            }
        </ul>
    </div>
    <div class="col-md-9">
        @if (Model.Items.Any())
        {
            var tutorial = Model.Items.First(); // Display the first item in the main content area
            <div class="tutorial-content">
                <h1 class="display-4">@tutorial.Name</h1>
                <div>@Html.Raw(@tutorial.Content)</div>
            </div>
        }
    </div>
</div>

<div class="pagination mt-4">
    @if (Model.HasPreviousPage)
    {
        <a class="btn btn-secondary" asp-action="Index" asp-route-page="@(Model.PageIndex - 1)" asp-route-name="@tutorialName">Previous</a>
    }
    @if (Model.HasNextPage)
    {
        <a class="btn btn-secondary" asp-action="Index" asp-route-page="@(Model.PageIndex + 1)" asp-route-name="@tutorialName">Next</a>
    }
</div>
